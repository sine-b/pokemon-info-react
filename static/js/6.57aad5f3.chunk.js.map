{"version":3,"sources":["services/api/api.ts","helpers/datagridCellFormatHelper.ts","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","../node_modules/@material-ui/icons/esm/ExpandLess.js","../node_modules/@material-ui/icons/esm/ExpandMore.js","components/pages/contests/Contests.tsx","store/actions/ContestActions.ts"],"names":["baseAxios","axios","create","baseURL","api","post","url","data","config","get","formatStringCell","params","cellText","value","formattedText","charAt","toUpperCase","slice","Collapse","React","props","ref","children","classes","className","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","component","Component","_props$disableStrictM","disableStrictModeCompat","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","_props$timeout","timeout","duration","standard","_props$TransitionComp","TransitionComponent","Transition","other","_objectWithoutProperties","theme","useTheme","timer","wrapperRef","autoTransitionDuration","concat","clearTimeout","current","enableStrictModeCompat","unstable_strictMode","nodeRef","handleRef","useForkRef","undefined","normalizedTransitionCallback","callback","nodeOrAppearing","maybeAppearing","_ref","_ref2","_slicedToArray","node","isAppearing","handleEnter","height","handleEntering","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","transitions","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","_extends","addEndListener","nodeOrNext","maybeNext","next","setTimeout","state","childProps","clsx","container","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","withStyles","overflow","transition","visibility","display","width","name","createSvgIcon","d","useStyles","makeStyles","textContainer","backgroundColor","padding","textCard","margin","contestTypeColumns","field","headerName","flex","valueFormatter","valueGetter","row","berry_flavor","names","length","find","contestName","language","color","renderCell","getFlavorTextValue","flavor_text_entries","flavorText","flavor_text","contestEffectColumns","effect_entries","effect","MovesCellList","memo","useState","movesOpen","setMovesOpen","List","ListItem","button","onClick","ListItemText","primary","ExpandLess","ExpandMore","unmountOnExit","disablePadding","map","move","superContestEffectColumns","movesList","Contests","contestTypeData","useSelector","contestTypeListWithDataState","contestEffectData","contestEffectListWithDataState","superContestEffectData","superContestEffectListWithDataState","dispatch","useDispatch","useEffect","limit","offset","a","response","responsePromises","results","contestTypeResult","console","error","Promise","all","contestTypeDataList","filter","contestTypeObj","contestTypeList","type","GET_CONTESTTYPELIST_WITH_DATA","getContestTypesWithData","contestEffectResult","contestEffectDataList","contestEffectObj","contestEffectList","GET_CONTESTEFFECTLIST_WITH_DATA","getContestEffectsWithData","superContestEffectResult","superContestEffectDataList","superContestEffectObj","superContestEffectList","GET_SUPERCONTESTEFFECTLIST_WITH_DATA","log","getSuperContestEffectsWithData","contestRowsPerPage","superContestRowsPerPage","TextComponent","text","Card","CardContent","Typography","Divider","autoHeight","disableColumnMenu","density","rows","columns","pageSize","rowsPerPageOptions"],"mappings":"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","file":"static/js/6.57aad5f3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseAxios = axios.create({\n  baseURL: 'https://pokeapi.co/api/v2',\n});\n\nconst api = (() => {\n  const post = (url: string, data: any, config: any) =>\n    baseAxios.post(url, data, config);\n  const get = (url: string, config?: any) => baseAxios.get(url, config);\n\n  return { post, get };\n})();\n\nexport default api;\n","import { ValueGetterParams } from '@material-ui/data-grid';\n\nexport const formatStringCell = (params: ValueGetterParams): String => {\n  const cellText = params.value as string;\n  let formattedText = '';\n  if (!cellText || typeof cellText !== 'string') {\n    return formattedText;\n  }\n  formattedText = cellText.charAt(0).toUpperCase() + cellText.slice(1);\n  return formattedText;\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : undefined);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  var handleExiting = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: handleRef\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the passed `Component`.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridCellParams,\r\n  ValueGetterParams,\r\n} from '@material-ui/data-grid';\r\nimport { find } from 'lodash';\r\n\r\nimport {\r\n  getContestTypesWithData,\r\n  getContestEffectsWithData,\r\n  getSuperContestEffectsWithData,\r\n} from '../../../store/actions/ContestActions';\r\nimport { IAppState } from '../../../store/store';\r\nimport { formatStringCell } from '../../../helpers/datagridCellFormatHelper';\r\n\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Contests.scss';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    textContainer: {\r\n      backgroundColor: '#F5F5F5',\r\n      padding: 10,\r\n    },\r\n    textCard: {\r\n      margin: 10,\r\n    },\r\n  };\r\n});\r\n\r\nconst getBerryFlavorValue = (params: ValueGetterParams): String => {\r\n  return params.row.berry_flavor?.name ?? 'No Data';\r\n};\r\nconst getColorValue = (params: ValueGetterParams): String => {\r\n  if (!params.row.names || !params.row.names.length) {\r\n    return 'No Data';\r\n  }\r\n  const englishName = find(params.row.names, (contestName) => {\r\n    return contestName.language.name === 'en';\r\n  });\r\n  return englishName.color || 'No Data';\r\n};\r\nconst contestTypeColumns: GridColDef[] = [\r\n  {\r\n    field: 'name',\r\n    headerName: 'Name',\r\n    flex: 1,\r\n    valueFormatter: formatStringCell,\r\n  },\r\n  {\r\n    field: 'berry_flavor',\r\n    headerName: 'Associated Berry Flavor',\r\n    flex: 1,\r\n    valueGetter: getBerryFlavorValue,\r\n    valueFormatter: formatStringCell,\r\n  },\r\n  {\r\n    field: 'color',\r\n    headerName: 'Associated Color',\r\n    flex: 1,\r\n    valueGetter: getColorValue,\r\n    valueFormatter: formatStringCell,\r\n    renderCell: (params: GridCellParams) => {\r\n      return (\r\n        <div className=\"contest-color-cell\">\r\n          <div\r\n            className=\"square\"\r\n            style={{ backgroundColor: params.value as string }}\r\n          />\r\n          <strong>{params.value as string}</strong>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst getEffectValue = (params: ValueGetterParams): String => {\r\n  if (!params.row.effect_entries || !params.row.effect_entries.length) {\r\n    return 'No Data';\r\n  }\r\n  const englishEffect = find(params.row.effect_entries, (effect) => {\r\n    return effect.language.name === 'en';\r\n  });\r\n  return englishEffect.effect || 'No Data';\r\n};\r\nconst getFlavorTextValue = (params: ValueGetterParams): String => {\r\n  if (\r\n    !params.row.flavor_text_entries ||\r\n    !params.row.flavor_text_entries.length\r\n  ) {\r\n    return 'No Data';\r\n  }\r\n  const englishFlavorText = find(\r\n    params.row.flavor_text_entries,\r\n    (flavorText) => {\r\n      return flavorText.language.name === 'en' || 'No Data';\r\n    }\r\n  );\r\n  return englishFlavorText.flavor_text;\r\n};\r\nconst contestEffectColumns: GridColDef[] = [\r\n  {\r\n    field: 'effect',\r\n    headerName: 'Effect',\r\n    width: 500,\r\n    flex: 1,\r\n    valueGetter: getEffectValue,\r\n  },\r\n  { field: 'appeal', headerName: 'Appeal (user hearts gained)' },\r\n  { field: 'jam', headerName: 'Jam (opponent hearts lost)' },\r\n  {\r\n    field: 'flavor_text',\r\n    headerName: 'Flavor Text',\r\n    flex: 1,\r\n    valueGetter: getFlavorTextValue,\r\n  },\r\n];\r\n\r\ninterface MovesCellListProps {\r\n  value: IAPIResource[];\r\n}\r\nconst MovesCellList = React.memo(function MovesCellList(\r\n  props: MovesCellListProps\r\n) {\r\n  // TODO: Replace expanded list with a popup\r\n  const { value } = props;\r\n  const [movesOpen, setMovesOpen] = useState(false);\r\n  const handleClick = () => {\r\n    setMovesOpen(!movesOpen);\r\n  };\r\n  const buildMovesList = () => {\r\n    if (!value || !value.length) {\r\n      return [];\r\n    }\r\n    return value.map((move) => {\r\n      return (\r\n        <ListItem>\r\n          <ListItemText primary={move.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemText primary=\"Moves\" />\r\n        {movesOpen ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={movesOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {buildMovesList()}\r\n        </List>\r\n      </Collapse>\r\n    </List>\r\n  );\r\n});\r\nconst superContestEffectColumns: GridColDef[] = [\r\n  {\r\n    field: 'moves',\r\n    headerName: 'Moves',\r\n    renderCell: (params: GridCellParams) => {\r\n      const movesList = params.value as IAPIResource[];\r\n      return <MovesCellList value={movesList} />;\r\n    },\r\n  },\r\n  {\r\n    field: 'appeal',\r\n    headerName: 'Appeal (user hearts gained)',\r\n  },\r\n  {\r\n    field: 'flavor_text',\r\n    headerName: 'Flavor Text',\r\n    flex: 1,\r\n    valueGetter: getFlavorTextValue,\r\n  },\r\n];\r\n\r\nconst Contests: React.FunctionComponent<{}> = () => {\r\n  const contestTypeData = useSelector(\r\n    (state: IAppState) => state.contestTypeListWithDataState\r\n  );\r\n  const contestEffectData = useSelector(\r\n    (state: IAppState) => state.contestEffectListWithDataState\r\n  );\r\n  const superContestEffectData = useSelector(\r\n    (state: IAppState) => state.superContestEffectListWithDataState\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContestTypesWithData());\r\n    dispatch(getContestEffectsWithData());\r\n    dispatch(getSuperContestEffectsWithData());\r\n  }, [dispatch]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const contestRowsPerPage: number[] = [\r\n    5,\r\n    20,\r\n    contestEffectData.contestEffectList?.length || 100,\r\n  ];\r\n  const superContestRowsPerPage: number[] = [\r\n    5,\r\n    10,\r\n    superContestEffectData.superContestEffectList?.length || 100,\r\n  ];\r\n  const contestInfoText = `Pokémon Contests are a type of \r\n    competition often contrasted with Pokémon battles and \r\n    held in Contest Halls. Pokémon are judged on their condition \r\n    and moves in two rounds, to determine which one is the \r\n    best of its category.`;\r\n  const contestTypeInfoText = `A Pokémon's condition is made up \r\n    of stats that exist for use in Pokémon Contests, Super Contests, \r\n    and Contest Spectaculars. There are five different condition \r\n    stats: Coolness, Beauty, Cuteness, Cleverness, and Toughness.`;\r\n  const contestEffectInfoText = `Every move that a Pokémon can \r\n    learn is associated with one of the five conditions, and the \r\n    audience reaction to a move's condition influences the excitement \r\n    in the hall. Below are the various effects possible.`;\r\n  const superContestEffectInfoText = `A Pokémon Super Contest is an \r\n    expanded format of the Pokémon Contests for the Generation IV games, \r\n    specifically in Diamond, Pearl, and Platinum. In it, Pokémon are \r\n    rated on their appearance and performance, rather than strength. \r\n    They are different from the previous generation's competitions in \r\n    that not only do they have more rounds, but rounds from the earlier \r\n    games have been altered. They come in four rankings in the same five \r\n    categories as Generation III: Cool, Beauty, Cute, Smart, and Tough. \r\n    Below are the various moves and their appeal effects.`;\r\n  const TextComponent = (text: string) => {\r\n    return (\r\n      <div className={classes.textContainer}>\r\n        <Card className={classes.textCard}>\r\n          <CardContent>\r\n            <Typography>{text}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"contest-container\">\r\n      {TextComponent(contestInfoText)}\r\n      <Divider />\r\n      {TextComponent(contestTypeInfoText)}\r\n      <div className=\"datagrid-container\">\r\n        <DataGrid\r\n          autoHeight\r\n          disableColumnMenu\r\n          density=\"compact\"\r\n          rows={contestTypeData.contestTypeList}\r\n          columns={contestTypeColumns}\r\n          pageSize={5}\r\n        />\r\n      </div>\r\n      {TextComponent(contestEffectInfoText)}\r\n      <div className=\"datagrid-container\">\r\n        <DataGrid\r\n          autoHeight\r\n          disableColumnMenu\r\n          rows={contestEffectData.contestEffectList}\r\n          columns={contestEffectColumns}\r\n          rowsPerPageOptions={contestRowsPerPage}\r\n          pageSize={5}\r\n        />\r\n      </div>\r\n      {TextComponent(superContestEffectInfoText)}\r\n      <div className=\"datagrid-container\">\r\n        <DataGrid\r\n          autoHeight\r\n          disableColumnMenu\r\n          rows={superContestEffectData.superContestEffectList}\r\n          columns={superContestEffectColumns}\r\n          rowsPerPageOptions={superContestRowsPerPage}\r\n          pageSize={5}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contests;\r\n","import {\n  GET_CONTESTTYPELIST,\n  GET_CONTESTTYPELIST_WITH_DATA,\n  GET_CONTESTTYPE,\n  GET_CONTESTEFFECTLIST,\n  GET_CONTESTEFFECTLIST_WITH_DATA,\n  GET_CONTESTEFFECT,\n  GET_SUPERCONTESTEFFECTLIST,\n  GET_SUPERCONTESTEFFECTLIST_WITH_DATA,\n  GET_SUPERCONTESTEFFECT,\n} from './actionTypes';\nimport { ActionCreator, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n  IContestTypeListState,\n  IContestTypeListWithDataState,\n  IContestTypeState,\n  IContestEffectListState,\n  IContestEffectListWithDataState,\n  IContestEffectState,\n  ISuperContestEffectListState,\n  ISuperContestEffectListWithDataState,\n  ISuperContestEffectState,\n} from '../reducers/ContestReducers';\n\nimport api from '../../services/api/api';\n\nexport interface IContestTypeListGetAction {\n  type: typeof GET_CONTESTTYPELIST;\n  contestTypeList: IResourceList;\n}\n\nexport interface IContestTypeListWithDataGetAction {\n  type: typeof GET_CONTESTTYPELIST_WITH_DATA;\n  contestTypeList: IContestType[];\n}\n\nexport interface IContestTypeGetAction {\n  type: typeof GET_CONTESTTYPE;\n  contestType: IContestType;\n}\n\nexport interface IContestEffectListGetAction {\n  type: typeof GET_CONTESTEFFECTLIST;\n  contestEffectList: IResourceList;\n}\n\nexport interface IContestEffectListWithDataGetAction {\n  type: typeof GET_CONTESTEFFECTLIST_WITH_DATA;\n  contestEffectList: IContestEffect[];\n}\n\nexport interface IContestEffectGetAction {\n  type: typeof GET_CONTESTEFFECT;\n  contestEffect: IContestEffect;\n}\n\nexport interface ISuperContestEffectListGetAction {\n  type: typeof GET_SUPERCONTESTEFFECTLIST;\n  superContestEffectList: IResourceList;\n}\n\nexport interface ISuperContestEffectListWithDataGetAction {\n  type: typeof GET_SUPERCONTESTEFFECTLIST_WITH_DATA;\n  superContestEffectList: ISuperContestEffect[];\n}\n\nexport interface ISuperContestEffectGetAction {\n  type: typeof GET_SUPERCONTESTEFFECT;\n  superContestEffect: ISuperContestEffect;\n}\n\n/* Contest Type Actions */\nexport const getContestTypes: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    IContestTypeListState,\n    null,\n    IContestTypeListGetAction\n  >\n> = (limit = '100', offset = '') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(\n        `/contest-type/?limit=${limit}&offset=${offset}`\n      );\n      dispatch({\n        contestTypeList: response.data,\n        type: GET_CONTESTTYPELIST,\n      });\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const getContestTypesWithData: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    IContestTypeListWithDataState,\n    null,\n    IContestTypeListWithDataGetAction\n  >\n> = (limit = '100', offset = '') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(\n        `/contest-type/?limit=${limit}&offset=${offset}`\n      );\n      const responsePromises = response.data.results.map(\n        async (contestTypeResult: IAPIResource) => {\n          try {\n            let contestTypeData = await api.get(contestTypeResult.url);\n            return contestTypeData.data;\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n      let contestTypeDataList: IContestType[] = await Promise.all(\n        responsePromises\n      );\n      contestTypeDataList = contestTypeDataList.filter((contestTypeObj) => {\n        return !!contestTypeObj;\n      });\n      dispatch({\n        contestTypeList: contestTypeDataList,\n        type: GET_CONTESTTYPELIST_WITH_DATA,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const getContestTypeByIdOrName: ActionCreator<\n  ThunkAction<Promise<any>, IContestTypeState, null, IContestTypeGetAction>\n> = (idOrName) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(`/contest-type/${idOrName}`);\n      dispatch({\n        resource: response.data,\n        type: GET_CONTESTTYPE,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\n/* Contest Effect Actions */\nexport const getContestEffects: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    IContestEffectListState,\n    null,\n    IContestEffectListGetAction\n  >\n> = (limit = '100', offset = '') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(\n        `/contest-effect/?limit=${limit}&offset=${offset}`\n      );\n      dispatch({\n        contestEffectList: response.data,\n        type: GET_CONTESTEFFECTLIST,\n      });\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const getContestEffectsWithData: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    IContestEffectListWithDataState,\n    null,\n    IContestEffectListWithDataGetAction\n  >\n> = (limit = '100', offset = '') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(\n        `/contest-effect/?limit=${limit}&offset=${offset}`\n      );\n      const responsePromises = response.data.results.map(\n        async (contestEffectResult: IAPIResource) => {\n          try {\n            let contestEffectData = await api.get(contestEffectResult.url);\n            return contestEffectData.data;\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n      let contestEffectDataList: IContestEffect[] = await Promise.all(\n        responsePromises\n      );\n      contestEffectDataList = contestEffectDataList.filter(\n        (contestEffectObj) => {\n          return !!contestEffectObj;\n        }\n      );\n      dispatch({\n        contestEffectList: contestEffectDataList,\n        type: GET_CONTESTEFFECTLIST_WITH_DATA,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const getContestEffectByIdOrName: ActionCreator<\n  ThunkAction<Promise<any>, IContestEffectState, null, IContestEffectGetAction>\n> = (idOrName) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(`/contest-effect/${idOrName}`);\n      dispatch({\n        resource: response.data,\n        type: GET_CONTESTEFFECT,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\n/* Super Contest Effect Actions */\nexport const getSuperContestEffects: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    ISuperContestEffectListState,\n    null,\n    ISuperContestEffectListGetAction\n  >\n> = (limit = '100', offset = '') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(\n        `/super-contest-effect/?limit=${limit}&offset=${offset}`\n      );\n      dispatch({\n        superContestEffectList: response.data,\n        type: GET_SUPERCONTESTEFFECTLIST,\n      });\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const getSuperContestEffectsWithData: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    ISuperContestEffectListWithDataState,\n    null,\n    ISuperContestEffectListWithDataGetAction\n  >\n> = (limit = '100', offset = '') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(\n        `/super-contest-effect/?limit=${limit}&offset=${offset}`\n      );\n      const responsePromises = response.data.results.map(\n        async (superContestEffectResult: IAPIResource) => {\n          try {\n            let superContestEffectData = await api.get(\n              superContestEffectResult.url\n            );\n            return superContestEffectData.data;\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n      let superContestEffectDataList: ISuperContestEffect[] = await Promise.all(\n        responsePromises\n      );\n      superContestEffectDataList = superContestEffectDataList.filter(\n        (superContestEffectObj) => {\n          return !!superContestEffectObj;\n        }\n      );\n      dispatch({\n        superContestEffectList: superContestEffectDataList,\n        type: GET_SUPERCONTESTEFFECTLIST_WITH_DATA,\n      });\n      console.log(superContestEffectDataList);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const getSuperContestEffectByIdOrName: ActionCreator<\n  ThunkAction<\n    Promise<any>,\n    ISuperContestEffectState,\n    null,\n    ISuperContestEffectGetAction\n  >\n> = (idOrName) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await api.get(`/super-contest-effect/${idOrName}`);\n      dispatch({\n        resource: response.data,\n        type: GET_SUPERCONTESTEFFECT,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n"],"sourceRoot":""}